// SPDX-FileCopyrightText: 2024 Joshua Goins <josh@redstrate.com>
// SPDX-License-Identifier: GPL-3.0-or-later
#pragma once

constexpr std::array names = {
    // Taken from https://github.com/0ceal0t/Dalamud-VFXEditor and https://github.com/PassiveModding/Meddle/
    // "DecodeDepthBuffer",
    "DecodeDepthBuffer_RAWZ",
    "DecodeDepthBuffer_INTZ_FETCH4",
    "ComputeSoftParticleAlpha",
    "ComputeSoftParticleAlphaOff",
    "ComputeSoftParticleAlphaOn",
    "UvPrecisionType_Table",
    "UvPrecisionType_High",
    "UvPrecisionType_Medium",
    "UvPrecisionType_Low",
    "ForceFarZ_Table",
    "ForceFarZ_Disable",
    "ForceFarZ_Enable",
    "ApplyFog_Table",
    "ApplyFog_None",
    "ApplyFog_RGB",
    "ApplyFog_Alpha",
    "ComputeFinalColorType_Table",
    "ComputeFinalColorType_NoneControl",
    "ComputeFinalColorType_LerpWhite",
    "ComputeFinalColorType_ModulateAlpha",
    "DepthOffsetType_Table",
    "DepthOffsetType_Legacy",
    "DepthOffsetType_FixedIntervalNDC",
    "ComputeSoftParticleType_Table",
    "ComputeSoftParticleType_Disable",
    "ComputeSoftParticleType_Enable",
    "UvCompute0_Table",
    "UvCompute_ByParameter",
    "UvCompute_ByPixelPosition",
    "UvCompute1_Table",
    "UvCompute2_Table",
    "UvCompute3_Table",
    "UvSetCount_Table",
    "UvSetCount_1",
    "UvSetCount_0",
    "UvSetCount_2",
    "UvSetCount_3",
    "UvSetCount_4",
    "TextureColor1_ColorToAlpha_Table",
    "TextureColor1_ColorToAlpha_Off",
    "TextureColor1_ColorToAlpha_On",
    "TextureColor1_Decode_Table",
    "TextureColor1_Decode_Off",
    "TextureColor1_Decode_On",
    "TextureColor1_UvNo_Table",
    "TextureColor1_Uv_0",
    "TextureColor1_Uv_1",
    "TextureColor1_Uv_2",
    "TextureColor1_Uv_3",
    "TextureColor1_Table",
    "TextureColor1_Disable",
    "TextureColor1_Enable",
    "TextureColor2_ColorToAlpha_Table",
    "TextureColor2_ColorToAlpha_Off",
    "TextureColor2_ColorToAlpha_On",
    "TextureColor2_Decode_Table",
    "TextureColor2_Decode_Off",
    "TextureColor2_UvNo_Table",
    "TextureColor2_Uv_0",
    "TextureColor2_Uv_1",
    "TextureColor2_Uv_2",
    "TextureColor2_Uv_3",
    "TextureColor2_CalculateAlpha_Table",
    "TextureColor2_CalculateAlpha_Mul",
    "TextureColor2_CalculateAlpha_None",
    "TextureColor2_CalculateAlpha_Max",
    "TextureColor2_CalculateAlpha_Min",
    "TextureColor2_CalculateColor_Table",
    "TextureColor2_CalculateColor_Mul",
    "TextureColor2_CalculateColor_Add",
    "TextureColor2_CalculateColor_None",
    "TextureColor2_CalculateColor_Sub",
    "TextureColor2_CalculateColor_Max",
    "TextureColor2_CalculateColor_Min",
    "TextureColor2_Table",
    "TextureColor2_Disable",
    "TextureColor2_Enable",
    "TextureColor3_ColorToAlpha_Table",
    "TextureColor3_ColorToAlpha_Off",
    "TextureColor3_ColorToAlpha_On",
    "TextureColor3_Decode_Table",
    "TextureColor3_Decode_Off",
    "TextureColor3_UvNo_Table",
    "TextureColor3_Uv_0",
    "TextureColor3_Uv_1",
    "TextureColor3_Uv_2",
    "TextureColor3_Uv_3",
    "TextureColor3_CalculateAlpha_Table",
    "TextureColor3_CalculateAlpha_Mul",
    "TextureColor3_CalculateAlpha_Max",
    "TextureColor3_CalculateAlpha_None",
    "TextureColor3_CalculateAlpha_Min",
    "TextureColor3_CalculateColor_Table",
    "TextureColor3_CalculateColor_Mul",
    "TextureColor3_CalculateColor_Add",
    "TextureColor3_CalculateColor_None",
    "TextureColor3_CalculateColor_Max",
    "TextureColor3_CalculateColor_Sub",
    "TextureColor3_CalculateColor_Min",
    "TextureColor3_Table",
    "TextureColor3_Disable",
    "TextureColor3_Enable",
    "TextureColor4_ColorToAlpha_Table",
    "TextureColor4_ColorToAlpha_Off",
    "TextureColor4_ColorToAlpha_On",
    "TextureColor4_Decode_Table",
    "TextureColor4_Decode_Off",
    "TextureColor4_UvNo_Table",
    "TextureColor4_Uv_0",
    "TextureColor4_Uv_2",
    "TextureColor4_Uv_3",
    "TextureColor4_Uv_1",
    "TextureColor4_CalculateAlpha_Table",
    "TextureColor4_CalculateAlpha_Mul",
    "TextureColor4_CalculateAlpha_None",
    "TextureColor4_CalculateAlpha_Min",
    "TextureColor4_CalculateAlpha_Max",
    "TextureColor4_CalculateColor_Table",
    "TextureColor4_CalculateColor_Mul",
    "TextureColor4_CalculateColor_Add",
    "TextureColor4_CalculateColor_None",
    "TextureColor4_CalculateColor_Min",
    "TextureColor4_CalculateColor_Sub",
    "TextureColor4_CalculateColor_Max",
    "TextureColor4_Table",
    "TextureColor4_Disable",
    "TextureColor4_Enable",
    "TextureNormal_UvNo_Table",
    "TextureNormal_Uv_0",
    "TextureNormal_Uv_1",
    "TextureNormal_Uv_2",
    "TextureNormal_Uv_3",
    "TextureNormal_Table",
    "TextureNormal_Disable",
    "TextureNormal_Enable",
    "TextureReflection_CalculateColor_Table",
    "TextureReflection_CalculateColor_Mul",
    "TextureReflection_CalculateColor_Add",
    "TextureReflection_CalculateColor_Max",
    "TextureReflection_CalculateColor_Sub",
    "TextureReflection_Table",
    "TextureReflection_Disable",
    "TextureReflection_Enable",
    "TextureDistortion_UvNo_Table",
    "TextureDistortion_Uv_0",
    "TextureDistortion_Uv_1",
    "TextureDistortion_Uv_3",
    "TextureDistortion_Uv_2",
    "TextureDistortion_UvSet0_Table",
    "TextureDistortion_UvSet_Disable",
    "TextureDistortion_UvSet_Enable",
    "TextureDistortion_UvSet1_Table",
    "TextureDistortion_UvSet2_Table",
    "TextureDistortion_UvSet3_Table",
    "TextureDistortion_Table",
    "TextureDistortion_Disable",
    "TextureDistortion_Enable",
    "TexturePalette_Table",
    "TexturePalette_Disable",
    "TexturePalette_Enable",
    "PointLightPositionType_Table",
    "PointLightPositionType_PerPixel",
    "PointLightPositionType_PerModel",
    "PointLightType_Table",
    "PointLightType_Lambert",
    "PointLightType_HalfLambert",
    "PointLightType_Ex",
    "PointLightCount_Table",
    "PointLightCount_0_0",
    "PointLightCount_1_0",
    "PointLightCount_1_1",
    "DirectionalLightType_Table",
    "DirectionalLightType_Lambert",
    "DirectionalLightType_HalfLambert",
    "DirectionalLightType_Ex",
    "DirectionalLight_Table",
    "DirectionalLight_Disable",
    "DirectionalLight_Enable",
    "ApplyLightBufferType_Table",
    "ApplyLightBufferType_Disable"
    "ApplyLightBufferType_Enable",
    "OutputType_Table",
    "OutputType_Debug",
    "OutputType_Release",
    "GetInstanceData",
    "GeometryInstancingOn",
    "GeometryInstancingOff",
    "GetNoInstancingData_Bush",
    "GetInstancingData_Bush",
    "GetLocalPosition",
    "GetLocalPositionNone",
    "GetLocalPositionTerrainEadg",
    "ApplyDitherClip",
    "ApplyDitherClipOff",
    "ApplyDitherClipOn",
    "GetNormalMap",
    "GetNormalMapOff",
    "GetNormalMapOn",
    "GetNormalMapParallaxOcclusion",
    "ApplyWavingAnim",
    "ApplyWavingAnimOff",
    "ApplyWavingAnimOn",
    "TransformView",
    "TransformViewRigid",
    "TransformViewSkin",
    "GetAmbientLight",
    "GetAmbientLight_None",
    "GetAmbientLight_SH",
    "GetReflectColor",
    "GetReflectColor_None",
    "GetReflectColor_Texture",
    "GetAmbientOcclusion",
    "GetAmbientOcclusion_None",
    "GetAmbientOcclusion_Apply",
    "SelectOutput",
    "SelectOutputMul",
    "SelectOutputAdd",
    "GetColor",
    "GetColor0",
    "GetColor1",
    "GetColor_Texture",
    "GetDirectionalLight",
    "GetDirectionalLight_Disable",
    "GetDirectionalLight_Enable",
    "GetDirectionalLight_Shadow",
    "GetFakeSpecular",
    "GetFakeSpecular_Disable",
    "GetFakeSpecular_Enable",
    "GetUnderWaterLighting",
    "GetUnderWaterLighting_Disable",
    "GetUnderWaterLighting_Enable",
    "ShadowSoftShadowType",
    "ShadowSoftShadowType_1x1",
    "ShadowSoftShadowType_3x3",
    "ShadowDistanceFadeType",
    "ShadowDistanceFadeType_Disable",
    "ShadowDistanceFadeType_Enable",
    "TransformProj",
    "TransformProjPlaneNear",
    "TransformProjPlaneFar",
    "TransformProjBox",
    "GetShadow",
    "GetShadowCascade",
    "GetShadowCascadeWith",
    "GetShadowCloudOnly",
    "GetShadow_Enable",
    "ApplyWavingAnimation",
    "ApplyWavingAnimation_Nothing",
    "ApplyWavingAnimation_AutoPlacement",
    "ApplyWavingAnimation_Shigemi",
    "ApplyAttenuation",
    "ApplyAttenuation_Linear",
    "ApplyAttenuation_Quadratic",
    "ApplyAttenuation_Cubic",
    "ApplyOmniShadow",
    "ApplyOmniShadow_Disable",
    "ApplyOmniShadow_Map",
    "ApplyOmniShadow_Chara",
    "ApplyOmniShadow_MapChara",
    "LightClip",
    "LightClip_Disable",
    "LightClip_Enable",
    "SpecularLighting",
    "SpecularLighting_Disable",
    "SpecularLighting_Enable",
    "ApplyMaskTexture",
    "ApplyMaskTexture_Disable",
    "ApplyMaskTexture_Enable",
    "GetRLR",
    "GetRLROff",
    "GetRLROn",
    "ApplyUnderWater",
    "ApplyUnderWaterOff",
    "ApplyUnderWaterOn",
    "TransformType",
    "TransformTypePlane",
    "TransformTypeBox",
    "ApplyConeAttenuation",
    "ApplyConeAttenuation_Disable",
    "ApplyConeAttenuation_Enable",
    "AddLayer",
    "AddLayer0",
    "AddLayer1",
    "AddLayer2",
    "Lighting",
    "LightingNormal",
    "LightingLow",
    "Default",
    "DefaultTechnique",
    "Color",
    "Depth",
    "AmbientLightMode",
    "AmbientLightModeCamera",
    "AmbientLightModeLocation",
    "AmbientLighting_Disable",
    "AmbientLighting_Enable",
    "AmbientLighting_EnableMultiply",
    "AmbientLighting_Table",
    "ApplyAlphaClip",
    "ApplyAlphaClipOff",
    "ApplyAlphaClipOn",
    "ApplyAuraColor",
    "ApplyAuraColorOff",
    "ApplyAuraColorOn",
    "ApplyDetailMap",
    "ApplyDetailMap_Disable",
    "ApplyDetailMap_Enable",
    "ApplyDissolveColor",
    "ApplyDissolveColorOff",
    "ApplyDissolveColorOn",
    "ApplyDynamicWave",
    "ApplyDynamicWaveOff",
    "ApplyDynamicWaveOn",
    "GetMaterialType",
    "GetMaterialTypeColorOnly",
    "GetMaterialTypeDefault",
    "GetMaterialTypeUseNormal",
    "GetVelocity",
    "GetVelocityMovable",
    "GetVelocityStatic",
    "GetViewPosition",
    "GetViewPosition_Billboard",
    "GetViewPosition_Default",
    "GlassBlendMode",
    "GlassBlendMode_Add",
    "GlassBlendMode_Mul",
    "ShaderType",
    "Shading_BG",
    "Shading_Hybrid",
    "Shading_None",
    "Shading_Table",
    "Shading_Uniform",
    "ApplyVertexMovement",
    "ApplyVertexMovementOff",
    "ApplyVertexMovementOn",
    "ApplyWavingAnim",
    "ApplyWavingAnimOff",
    "ApplyWavingAnimOn",
    "ApplyWavingAnimation",
    "ApplyWavingAnimation_AutoPlacement",
    "ApplyWavingAnimation_Nothing",
    "ApplyWavingAnimation_Shigemi",
    "CalculateInstancingPosition",
    "CalculateInstancingPosition_Off",
    "CalculateInstancingPosition_On",

    // Sub views
    "SUB_VIEW_MAIN",
    "SUB_VIEW_SHADOW_0",
    "SUB_VIEW_CUBE_0",
    "SUB_VIEW_ROOF",
    "SUB_VIEW_SHADOW_1",
    "SHADOW",

    // Parameters
    "g_DiffuseColor",
    "g_AlphaThreshold",
    "g_FresnelValue0",
    "g_SpecularMask",
    "g_LipFresnelValue0",
    "g_Shininess",
    "g_EmissiveColor",
    "g_LipShininess",
    "g_TileScale",
    "g_AmbientOcclusionMask",
    "g_TileIndex",
    "g_ScatteringLevel",
    "g_NormalScale",
    "g_ShaderID",
    "g_SpecularColor",
    "g_SpecularColorMask",
    "g_LipRoughnessScale",
    "g_WhiteEyeColor",
    "g_SphereMapIndex",
    "g_SSAOMask",
    "g_TileAlpha",
    "g_SheenRate",
    "g_SheenTintRate",
    "g_SheenAperture",
    "g_IrisRingColor",
    "g_IrisRingEmissiveIntensity",
    "g_IrisThickness",
    "g_IrisOptionColorRate",
    "g_AlphaAperture",
    "g_AlphaOffset",
    "g_GlassIOR",
    "g_GlassThicknessMax",
    "g_TextureMipBias",
    "g_OutlineColor",
    "g_OutlineWidth",
    "g_Ray",
    "g_TexU",
    "g_TexV",
    "g_TexAnim",
    "g_Color",
    "g_ShadowAlphaThreshold",
    "g_NearClip",
    "g_AngleClip",
    "g_CausticsReflectionPowerBright",
    "g_CausticsReflectionPowerDark",
    "g_HeightScale",
    "g_HeightMapScale",
    "g_HeightMapUVScale",
    "g_MultiWaveScale",
    "g_WaveSpeed",
    "g_WaveTime",
    "g_AlphaMultiParam",
    "g_ColorUVScale",
    "g_DetailID",
    "g_DetailNormalScale",
    "g_DetailColorUvScale",
    "g_DetailColor",
    "g_DetailNormalUvScale",
    "g_EnvMapPower",
    "g_InclusionAperture",
    "g_IrisRingForceColor",
    "g_LayerDepth",
    "g_LayerIrregularity",
    "g_LayerScale",
    "g_LayerVelocity",
    "g_MultiDetailColor",
    "g_MultiDiffuseColor",
    "g_MultiEmissiveColor",
    "g_MultiHeightScale",
    "g_MultiNormalScale",
    "g_MultiSpecularColor ",
    "g_MultiSSAOMask",
    "g_MultiWhitecapDistortion",
    "g_MultiWhitecapScale",
    "g_NormalScale1",
    "g_NormalUVScale",
    "g_PrefersFailure",
    "g_ReflectionPower",
    "g_ShadowOffset",
    "g_ShadowPosOffset",
    "g_SpecularPower",
    "g_SpecularUVScale",
    "g_ToonIndex",
    "g_ToonLightScale",
    "g_ToonReflectionScale",
    "g_ToonSpecIndex",
    "g_TransparencyDistance",
    "g_WaveletDistortion",
    "g_WaveletNoiseParam",
    "g_WaveletOffset",
    "g_WaveletScale",
    "g_WaveTime1",
    "g_WhitecapDistance",
    "g_WhitecapDistortion",
    "g_WhitecapNoiseScale",
    "g_WhitecapScale",
    "g_WhitecapSpeed",
    "g_Fresnel",
    "g_Gradation",
    "g_Intensity",
    "g_LayerColor",
    "g_RefractionColor",
    "g_WhitecapColor",
    "g_BackScatterPower",
    "g_FarClip",
    "g_FurLength",
    "g_HairBackScatterRoughnessOffsetRate",
    "g_HairScatterColorShift",
    "g_HairSecondaryRoughnessOffsetRate",
    "g_HairSpecularBackScatterShift",
    "g_HairSpecularPrimaryShift",
    "g_HairSpecularSecondaryShift",
    "g_LightingType",
    "g_MultiSpecularColor",
    "g_SubSurfacePower",
    "g_SubSurfaceProfileID",
    "g_SubSurfaceWidth",
    "g_Transparency",
    "g_UseSubSurfaceRate",
    "g_VertexMovementScale",

    // Samplers
    "g_SamplerViewPosition",
    "g_SamplerVPosition",
    "g_SamplerDither",
    "g_SamplerColorMap0",
    "g_SamplerColorMap1",
    "g_SamplerNormalMap0",
    "g_SamplerNormalMap1",
    "g_SamplerSpecularMap0",
    "g_SamplerSpecularMap1",
    "g_SamplerEnvMap",
    "g_SamplerLightDiffuse",
    "g_SamplerLightSpecular",
    "g_SamplerAttenuation",
    "g_SamplerOmniShadowStatic",
    "g_SamplerOmniShadowDynamic",
    "g_SamplerOmniShadowIndexTable",
    "g_SamplerGBuffer",
    "g_SamplerGBuffer1",
    "g_SamplerGBuffer2",
    "g_SamplerGBuffer3",
    "g_SamplerLight",
    "g_SamplerShadow",
    "g_CloudShadowSampler",
    "g_RoofSampler",
    "g_AnimSampler",
    "g_SamplerCaustics",
    "g_SamplerCaustics",
    "g_SamplerColor1",
    "g_SamplerColor2",
    "g_SamplerColor3",
    "g_SamplerColor4",
    "g_SamplerDistortion",
    "g_SamplerPalette",
    "g_SamplerDiffuse",
    "g_SamplerNormal",
    "g_SamplerMask",
    "g_SamplerSpecular",
    "g_SamplerDecal",
    "g_SamplerTable",
    "g_SamplerTileDiffuse",
    "g_SamplerTileNormal",
    "g_SamplerIndex",
    "g_SamplerCatchlight",
    "g_SamplerReflection",
    "g_SamplerOcclusion",
    "g_SamplerDepth",
    "g_ToneMapSampler",
    "g_SkySampler",
    "g_Sampler",
    "g_SamplerFresnel",
    "g_SamplerColorMap",
    "g_SamplerNormalMap",
    "g_SamplerMaskMap",
    "g_SamplerSpecularMap",
    "g_SamplerDistortionMap",
    "g_SamplerWaveMap",
    "g_SamplerWhitecapMap",
    "g_SamplerWaveletMap0",
    "g_SamplerWaveletMap1",
    "g_SamplerReflectionMap",
    "g_SamplerNoise",
    "g_SamplerWaveletNoise",
    "g_SamplerRefractionMap",
    "g_VertexMovementMaxLength",

    // Passes
    "PASS_Z_OPAQUE",
    "PASS_G_OPAQUE",
    "PASS_LIGHTING_OPAQUE",
    "PASS_G_SEMITRANSPARENCY",
    "PASS_COMPOSITE_OPAQUE",
    "PASS_WATER",
    "PASS_WATER_Z",
    "PASS_SEMITRANSPARENCY",
    "PASS_COMPOSITE_SEMITRANSPARENCY",
    "PASS_WIREFRAME",
    "PASS_COMPOSITE_SEMITRANSPARENCY_UNDER_WATER",
    "PASS_LIGHTING_SEMITRANSPARENCY",
    "PASS_0",
    "PASS_14",
    "PASS_7",
    "PASS_1",
    "PASS_2",
    "PASS_12",
};

static std::string nameFromCrc(const uint32_t crc)
{
    static QHash<uint32_t, std::string> hash;
    if (hash.isEmpty()) {
        hash.reserve(names.size());
        for (const auto name : names) {
            hash.insert(physis_shpk_crc(name), name);
        }

        // manual ones
        // TODO: find out their real names
        // Taken from https://github.com/Shaderlayan/Ouroboros
        hash.insert(0xF52CCF05, "Vertex Color Mode");
        hash.insert(0xDFE74BAC, "Color");
        hash.insert(0xA7D2FF60, "Mask");

        hash.insert(0xB616DC5A, "Texture Mode");
        hash.insert(0x5CC605B5, "Multi");
        hash.insert(0x22A4AABF, "Simple");
        hash.insert(0x600EF9DF, "Compatibility");

        hash.insert(0xD2777173, "Decal Mode");
        hash.insert(0x4242B842, "None");
        hash.insert(0x584265DD, "Alpha");
        hash.insert(0xF35F5131, "Color");

        hash.insert(0xC8BD1DEF, "Specular Map Mode");
        hash.insert(0x198D11CD, "Color");
        hash.insert(0xA02F4828, "Multi");
    }

    if (hash.contains(crc)) {
        return hash.value(crc);
    }
    return QStringLiteral("%1").arg(crc, 1, 16).toStdString();
}
